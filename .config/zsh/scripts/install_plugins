#!/usr/bin/env zsh

install_plugins() {
  ###### Shell ######
  echo "Installing oh-my-zsh:"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  echo "Insatlling powerlevel-10k"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}"/themes/powerlevel10k

  echo "Installing zsh-autosuggestions"
  git clone https://github.com/zsh-users/zsh-autosuggestions "${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}"/plugins/zsh-autosuggestions

  echo "Installing zsh-syntax-highlighting"
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-syntax-highlighting

  echo "Installing zsh-z"
  git clone https://github.com/agkozak/zsh-z ${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-z

  echo "Installing zsh-completions"
  git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions

  echo "Installing fzf"
  git clone https://github.com/junegunn/fzf.git ${XDG_DATA_HOME}/fzf \
    && ${XDG_DATA_HOME}/fzf/install
  
  ###### Version Managers ######
  echo "Installing node version manager"
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash

  echo "Installing terraform version manager"
  git clone https://github.com/tfutils/tfenv.git ${TFENV_ROOT:-~/.tfenv}
  ln -s ${TFENV_ROOT:-~}/tfenv/bin/* /usr/local/bin

  echo "Installing go version manager"
  curl -sSL https://git.io/g-install | sh -s
  
  ###### Plugins ######
  echo "Installing nvim plugin manager"
  curl -fLo "${XDG_DATA_HOME:-~/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
       https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

  echo "Installing k9s"
  go install github.com/derailed/k9s@v0.25.2
  
  echo "Installing krew"
  (
    cd "$(mktemp -d)" &&
    OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
    ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
    KREW="krew-${OS}_${ARCH}" &&
    curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
    tar zxvf "${KREW}.tar.gz" &&
    ./"${KREW}" install krew
  )
  
  echo "Installing kubectx & kubens"
  kubectl krew install ctx
  kubectl krew install ns
}
